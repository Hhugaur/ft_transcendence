version: '3'
services:
  proxy-ssl:
    build: ./proxy-ssl
    depends_on:
      - front
    networks:
      - webapp
    ports:
      - 443:443
    restart: always
    container_name: proxy-ssl
    hostname: proxy-ssl

  database:
    build: ./backend/database
    ports:
      - "3000:3000"
    env_file:
      - .env
    networks:
      - webapp
    depends_on:
     - authentication
    restart: always
    container_name: database
    hostname: database
    
  gateway:
    build: ./backend/gateway
    depends_on:
      - front
      - database
      - authentification
      - websocket
    env_file:
      - .env
    networks:
      - webapp
    ports:
      - "3001:3001"
    restart: always
    container_name: gateway
    hostname: gateway
    
  websocket:
    build: ./backend/websocket
    env_file:
      - .env
    networks:
      - webapp
    ports:
      - "3002:3002"
    restart: always
    container_name: websocket
    hostname: websocket
    volumes:
      - ./backend/websocket:/app
      - /app/node_modules
      
  authentification:
    build: ./backend/authentification
    ports:
      - "3003:3003"
    networks:
      - webapp
    restart: always
    container_name: authentification
    hostname: authentification

  front:
    build: ./frontend
    env_file:
      - .env
    networks:
      - webapp
    ports:
      - "5000:5000"
    restart: always
    container_name: front
    hostname: front
    volumes:
      - ./frontend:/app
      - /app/node_modules

networks:
  webapp:
    driver: bridge

