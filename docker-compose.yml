version: '3'
services:
  proxy-ssl:
    build:
      context: .
      dockerfile: proxy-ssl/Dockerfile
    depends_on:
      - front
    networks:
      - webapp
    ports:
      - 4269:4269
      - 6969:6969
    restart: always
    container_name: proxy-ssl
    hostname: proxy-ssl

  database:
    build: ./backend/database
    ports:
      - "3000:3000"
    env_file:
      - .env
    networks:
      - webapp
    depends_on:
     - authentication
    volumes:
     - ./database:/app/database
    restart: always
    container_name: database
    hostname: database
    
  gateway:
    build: ./backend/gateway
    depends_on:
      - front
      - database
      - authentication
      - websocket
      - pong
    env_file:
      - .env
    networks:
      - webapp
    ports:
      - "3001:3001"
    restart: always
    container_name: gateway
    hostname: gateway
    
  websocket:
    build: ./backend/websocket
    env_file:
      - .env
    networks:
      - webapp
    ports:
      - "3002:3002"
    restart: always
    container_name: websocket
    hostname: websocket
    volumes:
      - ./backend/websocket:/app
      - /app/node_modules

  authentication:
    build: ./backend/authentication
    env_file:
      - .env
    ports:
      - "3003:3003"
    networks:
      - webapp
    restart: always
    container_name: authentication
    hostname: authentication

  pong:
    build: ./backend/pong
    env_file:
      - .env
    networks:
      - webapp
    ports:
      - "3004:3004"
    restart: always
    container_name: pong
    hostname: pong

  front:
    build: ./frontend
    env_file:
      - .env
    networks:
      - webapp
    ports:
      - "5000:5000"
    restart: always
    container_name: front
    hostname: front
    volumes:
      - ./frontend:/app
      - /app/node_modules

networks:
  webapp:
    driver: bridge

